service: MyOnlineBookStore
frameworkVersion: '2'

provider:
  name: aws
  lambdaHashingVersion: 20201221
  runtime: python3.8
  stage: dev
  region: eu-central-1
  memorySize: 128 # optional, in MB, default is 1024
  logs:
    httpApi: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:*'

package:
  individually: true
  patterns:
    - '!**'

functions:
  order:
    handler: order/handler.order
    layers:
      - { Ref: AwsXraySdkLambdaLayer }
    description: Validate credit score and put order in DynamoDB.
    timeout: 2
    package:
      patterns:
        - order/handler.py
    tracing: true
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - arn
                - aws
                - sqs
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - order.fifo
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - arn
                - aws
                - sqs
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - order-dlq.fifo
    tags:
      App: MyOnlineBookStore
      Environment: dev
      Runtime: python3.8

  book-add:
    handler: book/add/handler.add_book
    layers:
      - { Ref: AwsXraySdkLambdaLayer }
    description: Add book in DynamoDB.
    timeout: 2
    package:
      patterns:
        - book/add/handler.py
    tracing: true
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - arn
                - aws
                - sqs
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - book
    tags:
      App: MyOnlineBookStore
      Environment: dev
      Runtime: python3.8
    environment:
      AWS_REGION_NAME: ${self:provider.region}
      DYNAMODB_TABLE_NAME: Book

  book-display:
    handler: book/display/handler.display_book
    layers:
      - { Ref: AwsXraySdkLambdaLayer }
    description: Return books stored in DynamoDB.
    timeout: 10
    package:
      patterns:
        - book/display/handler.py
    tracing: true
    events:
      - http:
          method: get
          path: /book/display
          cors:
            origin: '*'
            headers:
              - Content-Type
    tags:
      App: MyOnlineBookStore
      Environment: dev
      Runtime: python3.8
    environment:
      AWS_REGION_NAME: ${self:provider.region}
      DYNAMODB_TABLE_NAME: Book

layers:
  awsXraySdk:
    package:
      artifact: ../layers/aws-xray-sdk.zip
    name: aws-xray-sdk # optional, Deployed Lambda layer name
    description: SDK to send segments to AWS xray.
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - python3.8
    licenseInfo: GPLv3
    retain: false # optional, false by default. If true, layer versions are not deleted as new ones are created
